# makefile for Lua hierarchy
# see INSTALL for installation instructions
# see config for customization instructions

BASE=..
include $(BASE)/Config

LUA= .

all: dirs
	$(MAKE) -C src all
	$(MAKE) -C src/lib all
	ld -o lib/liblua50.so -shared -soname liblua50.so src/*.o
	ld -o lib/liblualib50.so -shared -soname liblualib50.so src/lib/*.o
	$(MAKE) -C src/luac all
	$(MAKE) -C src/lua all

clean:
	cd src; $(MAKE) clean
	cd src/lib; $(MAKE) clean
	cd src/luac; $(MAKE) clean
	cd src/lua; $(MAKE) clean
	rm -f lib/*.so* bin/*

# in case they were not created during unpacking
dirs:	bin lib

bin lib:
	mkdir -p $@

# remove debug information from binaries
strip:
	$(STRIP) bin/* lib/*.so*

# official installation
install: strip
	$(INSTALL_EXEC) bin/* $(INSTALL_BIN)
	mv $(INSTALL_BIN)/lua $(INSTALL_BIN)/lua50
	mv $(INSTALL_BIN)/luac $(INSTALL_BIN)/lua50c
	#$(INSTALL_DATA) lib/*.a $(INSTALL_LIB)
	$(INSTALL_EXEC) lib/*.so* $(INSTALL_LIB)

# echo config parameters
echo:
	@echo ""
	@echo "These are the parameters currently set in $(LUA)/config to build Lua $V:"
	@echo ""
	@echo "LOADLIB = $(LOADLIB)"
	@echo "DLLIB = $(DLLIB)"
	@echo "NUMBER = $(NUMBER)"
	@echo "POPEN = $(POPEN)"
	@echo "TMPNAM = $(TMPNAM)"
	@echo "DEGREES = $(DEGREES)"
	@echo "USERCONF = $(USERCONF)"
	@echo "CC = $(CC)"
	@echo "WARN = $(WARN)"
	@echo "MYCFLAGS = $(MYCFLAGS)"
	@echo "MYLDFLAGS = $(MYLDFLAGS)"
	@echo "EXTRA_LIBS = $(EXTRA_LIBS)"
	@echo "AR = $(AR)"
	@echo "RANLIB = $(RANLIB)"
	@echo "STRIP = $(STRIP)"
	@echo "INSTALL_ROOT = $(INSTALL_ROOT)"
	@echo "INSTALL_BIN = $(INSTALL_BIN)"
	@echo "INSTALL_INC = $(INSTALL_INC)"
	@echo "INSTALL_LIB = $(INSTALL_LIB)"
	@echo "INSTALL_MAN = $(INSTALL_MAN)"
	@echo "INSTALL_EXEC = $(INSTALL_EXEC)"
	@echo "INSTALL_DATA = $(INSTALL_DATA)"
	@echo ""
	@echo "Edit $(LUA)/config if needed to suit your platform and then run make."
	@echo ""

# turn config into Lua code
# uncomment the last sed expression if you want nil instead of empty strings
lecho:
	@echo "-- $(LUA)/config for Lua $V"
	@echo "VERSION = '$(V)'"
	@make echo | grep = | sed -e 's/= /= "/' -e 's/$$/"/' #-e 's/""/nil/'
	@echo "-- EOF"

newer:
	@find . -newer MANIFEST -type f
